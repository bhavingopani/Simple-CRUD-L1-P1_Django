"""
Django settings for simpleCrudAppL1P1 project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'z@w11w^4-uzurhhdtj3tg)u-1fl5ljalahel0dtyq6wpq*myf@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True     #THIS SHOULD BE FALSE WHEN YOU ARE IN PRODUCTION OR WORKING WITH LIVE BRANCH OR LIVE PROJECT as this will show all the things when throughs an error when true. If its False it wont show much details to the end user which is good for security

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'simpleCrudApp.apps.SimplecrudappConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'simpleCrudAppL1P1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR , "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'simpleCrudAppL1P1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/


LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

# Adding these new lines
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

#Email configuration - by me

    #if you want to send email from local -- then have to configure SMTP(simple mail transfer protocol)
    #we will be using gmail to send the email - gmail will be in the middle here.. so will have to give access to any gmail with userid and password
    #so here SMTP is a resource - that will be working as resource 
    #when we do that for server -- that we make the main hosting as SMTP -- even without that we can send email -- but in local system its mandatory

    #turn on the less secure app otherwise gmail will not allow to use SMTP and will not allow us to send email via the respective email

#there are a lot of configuration and parameter -- we dont need all of them.
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  #Required for configuring the libraby
EMAIL_HOST = 'smtp.gmail.com'  #gmail host name -- for gmail only. - it will be different for server.
EMAIL_PORT = 587  # when using local system and gmail - use 587 // #But when using live system -https-  the PORT is different.  465 -- mostly used when we do that on live server with https
EMAIL_HOST_USER = 'testpatel456@gmail.com' #which email id to be used to send email via smtp
EMAIL_HOST_PASSWORD = 'Test@123'  #password of the email
EMAIL_USE_TLS = True  # by default its False -- Whether to use a TLS (secure) connection when talking to the SMTP server.#this is generally for local -- and when port 587 -
                    #SSL and TLS, which makes the connection, and the content of your emails are secure during the transmission.

# SOLVE THE ERROR --- OR CHECK THAT EMAIL SENDING AGAIN of CODEMY.com


#Now we can use email - but before that you have to use librabry - in views.py
